name: Publish beta

on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run build
      - run: npm publish --access public --tag beta
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Get version
        id: get_version
        run: |
          echo ::set-output name=tag::$(grep '"version"' package.json | cut -d '"' -f 4 | head -n 1)
#      - name: Trigger autotests
#        run: |
#          curl -H `Authorization: token ${{ secrets.VEE_TABLE_TOKEN }}` \
#               -H 'Accept: application/vnd.github.everest-preview+json' \
#               "https://api.github.com/repos/Drill4J/e2e/dispatches" \
#               -d `{ "event_type": "run_test", "client_payload": { "${{ github.event.repository.name }}": "${{ steps.get_version.outputs.tag }}" } }`
      # - name: Repository Dispatch
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     repository: Drill4J/e2e
      #     token: ${{ secrets.VEE_TABLE_TOKEN }}
      #     event-type: run_test
      #     client-payload: '{ "${{ github.event.repository.name }}": "${{ steps.get_version.outputs.tag }}" }'
      # # place this action LAST
      # - uses: Drill4J/vee-table@0.0.0
      #   with:
      #     # leave everything "as-is"
      #     github-access-token: ${{ secrets.VEE_TABLE_TOKEN }}
      #     action-type: 'add-version'
      #     ledger-repo-url: 'https://github.com/Drill4J/vee-ledger'
      #     ledger-repo-owner: 'Drill4J'
          # ledger-repo-name: 'vee-ledger'
          # version-component-id: ${{ github.event.repository.name }}
          # # leave everything "as-is"

          # # steps.build_artifact is your step, where new version tag is created
          # version-tag: ${{ steps.get_version.outputs.tag }} # Pass new version tag
